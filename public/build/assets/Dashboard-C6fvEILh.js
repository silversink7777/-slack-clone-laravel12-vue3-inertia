import{_ as U}from"./AppLayout-DPHlVa1r.js";import{d as f,q as b,z as v,A as N,c as R,o as P}from"./app-Dat6Ui5J.js";import"./WorkspaceSidebar-V0T4plSC.js";import"./ChannelListSidebar-BF5V8X26.js";import"./Modal-D_vGjEwO.js";import"./PrimaryButton-kQjWH96S.js";import"./SecondaryButton-Cm5SG2AG.js";import"./DialogModal-D5YApQ5-.js";const K={__name:"Dashboard",props:{channels:Array,messages:Array,"direct-messages":Array},setup(w){var M,C;const t=w;console.log("=== Dashboard Component Debug ==="),console.log("Dashboard props:",t),console.log("Channels prop type:",typeof t.channels),console.log("Channels prop:",t.channels),console.log("Channels prop length:",(M=t.channels)==null?void 0:M.length),console.log("Messages prop type:",typeof t.messages),console.log("Messages prop:",t.messages),console.log("Messages prop length:",(C=t.messages)==null?void 0:C.length);const n=f((t.channels||[]).map((e,a)=>({...e,active:a===0}))),c=f(t.messages||[]),s=f(n.value.find(e=>e.active));console.log("Initial channels ref:",n.value),console.log("Initial messages ref:",c.value),console.log("Active channel:",s.value);const i=f(t["direct-messages"]||[]),d=f(null),r=f([]);console.log("Direct messages prop:",t["direct-messages"]),console.log("Direct messages ref:",i.value);const m=async e=>{if(console.log("=== handleSelectDirectMessage called ==="),console.log("Selected user ID:",e),console.log("Current directMessages:",i.value),n.value=n.value.map(a=>({...a,active:!1})),s.value=null,d.value=i.value.find(a=>a.id===e)||null,console.log("Found activeDirectMessage:",d.value),!d.value){console.error("Direct message partner not found for user ID:",e);return}try{console.log("Fetching conversation for partner ID:",e);const a=document.head.querySelector('meta[name="csrf-token"]'),l={Accept:"application/json","Content-Type":"application/json"};a&&(l["X-CSRF-TOKEN"]=a.content);const o=await v.get(`/direct-messages/conversation?partner_id=${e}`,{headers:l});console.log("Conversation response:",o.data),r.value=o.data}catch(a){console.error("Failed to fetch direct messages:",a),r.value=[]}};let g=null;const h=f(!1),S=e=>{h.value=e,h.value?(v.post("/user-online-status",{online:!1}),g&&clearInterval(g)):(v.post("/user-online-status",{online:!0}),D())},y=async()=>{try{console.log("Fetching online status...");const e=await v.get("/user-online-status");if(console.log("Online status response:",e),console.log("Response data:",e.data),e.data&&Array.isArray(e.data)){console.log("Processing online status data...");const a=e.data.map(o=>{var u;return{id:o.user_id,name:((u=o.user)==null?void 0:u.name)||"Unknown",online:o.online===!0||o.online===1||o.online==="1",active:!1}}),l=i.value.filter(o=>!a.some(u=>u.id===o.id));i.value=[...l,...a],console.log("Final directMessages:",i.value)}else console.warn("Invalid response format from API")}catch(e){console.error("Failed to fetch user online status:",e)}};function D(){g&&clearInterval(g),g=setInterval(async()=>{if(!h.value)try{await v.get("/user-online-status-update")}catch{}try{await y()}catch{}},1e4)}b(async()=>{console.log("=== Dashboard Component Mounted ==="),n.value=(t.channels||[]).map((e,a)=>({...e,active:a===0})),c.value=t.messages||[],s.value=n.value.find(e=>e.active),i.value=t["direct-messages"]||[],console.log("Initial directMessages from props:",i.value),console.log("Mounted channels:",n.value),console.log("Mounted messages:",c.value),console.log("Mounted active channel:",s.value),s.value?(console.log("Loading messages for channel:",s.value.id),p(s.value.id)):console.log("No active channel found");try{console.log("Updating own online status...");const e=document.head.querySelector('meta[name="csrf-token"]');e?console.log("CSRF token found:",e.content):console.warn("CSRF token not found"),await v.get("/user-online-status-update"),console.log("Own online status updated successfully")}catch(e){console.error("Failed to update own online status:",e),e.response&&e.response.status===419&&console.error("CSRF token error - page may need to be refreshed")}try{await y()}catch(e){console.error("Initial fetchOnlineStatus failed:",e)}D()}),N(()=>{g&&clearInterval(g)});const p=async e=>{d.value=null,r.value=[],n.value=n.value.map(a=>({...a,active:a.id===e})),s.value=n.value.find(a=>a.active);try{const a=await v.get(`/messages?channel_id=${e}`);c.value=a.data}catch(a){console.error("Failed to fetch messages:",a),c.value=[]}},x=async e=>{var a;console.log("New channel added:",e);try{const l=await v.get("/channels");console.log("Channels API response:",l.data);const o=l.data.channels||[];console.log("Updated channels:",o),n.value=o.map(u=>({...u,active:u.id===e.id})),console.log("Updated channels.value:",n.value),s.value=n.value.find(u=>u.active),console.log("Active channel:",s.value),s.value&&await p(s.value.id)}catch(l){console.error("Failed to refresh channels after creation:",l),console.error("Error response:",(a=l.response)==null?void 0:a.data),n.value=n.value.map(o=>({...o,active:!1})),n.value.push({...e,active:!0}),s.value=n.value.find(o=>o.active),s.value&&await p(s.value.id)}},A=e=>{s.value?c.value.unshift(e):d.value&&r.value.unshift(e)},F=e=>{if(s.value){const a=c.value.findIndex(l=>l.id===e.id);a!==-1&&(c.value[a]=e)}else if(d.value){const a=r.value.findIndex(l=>l.id===e.id);a!==-1&&(r.value[a]=e)}},I=e=>{if(s.value){const a=c.value.findIndex(l=>l.id===e);a!==-1&&c.value.splice(a,1)}else if(d.value){const a=r.value.findIndex(l=>l.id===e);a!==-1&&r.value.splice(a,1)}},_=async e=>{console.log("Channel deleted:",e),n.value=n.value.filter(a=>a.id!==e),s.value&&s.value.id===e&&(n.value.length>0?await p(n.value[0].id):(s.value=null,c.value=[]))},k=async e=>{console.log("Channel left:",e),n.value=n.value.filter(a=>a.id!==e),s.value&&s.value.id===e&&(n.value.length>0?await p(n.value[0].id):(s.value=null,c.value=[]))},O=async e=>{console.log("Direct message started:",e);const a={id:e.partner.id,name:e.partner.name,online:e.partner.online,active:!1};i.value.findIndex(o=>o.id===a.id)===-1&&i.value.push(a),await m(a.id)};return(e,a)=>(P(),R(U,{title:"Dashboard",channels:n.value,"direct-messages":i.value,messages:s.value?c.value:r.value,"active-channel":s.value,"active-direct-message":d.value,"manual-offline":h.value,onToggleManualOffline:S,onSelectChannel:p,onNewChannelAdded:x,onMessageSent:A,onMessageUpdated:F,onMessageDeleted:I,onChannelDeleted:_,onChannelLeft:k,onSelectDirectMessage:m,onDirectMessageStarted:O},null,8,["channels","direct-messages","messages","active-channel","active-direct-message","manual-offline"]))}};export{K as default};
