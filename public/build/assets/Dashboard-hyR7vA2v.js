import{_ as F}from"./AppLayout-g_gj_M43.js";import{d as g,q as k,z as i,A as D,c as b,o as O}from"./app-PgSOKnUn.js";import"./ChannelListSidebar-BPdy8Zmu.js";import"./Modal-BHW6xvs7.js";import"./PrimaryButton-BNhFOszE.js";import"./SecondaryButton-CtUa-bff.js";const z={__name:"Dashboard",props:{channels:Array,messages:Array},setup(M){var m,y;const l=M;console.log("=== Dashboard Component Debug ==="),console.log("Dashboard props:",l),console.log("Channels prop type:",typeof l.channels),console.log("Channels prop:",l.channels),console.log("Channels prop length:",(m=l.channels)==null?void 0:m.length),console.log("Messages prop type:",typeof l.messages),console.log("Messages prop:",l.messages),console.log("Messages prop length:",(y=l.messages)==null?void 0:y.length);const a=g((l.channels||[]).map((e,n)=>({...e,active:n===0}))),t=g(l.messages||[]),s=g(a.value.find(e=>e.active));console.log("Initial channels ref:",a.value),console.log("Initial messages ref:",t.value),console.log("Active channel:",s.value);const c=g([]);let r=null;const v=g(!1),w=()=>{c.value=[]},C=e=>{v.value=e,v.value?(i.post("/user-online-status",{online:!1}),r&&clearInterval(r)):(i.post("/user-online-status",{online:!0}),f())},p=async()=>{try{console.log("Fetching online status...");const e=await i.get("/user-online-status");console.log("Online status response:",e),console.log("Response data:",e.data),e.data&&Array.isArray(e.data)?(console.log("Processing online status data..."),c.value=e.data.map(n=>{var o;return console.log("Processing status:",n),{id:n.user_id,name:((o=n.user)==null?void 0:o.name)||"Unknown",online:n.online===!0||n.online===1||n.online==="1",active:!1}}),console.log("Final directMessages:",c.value)):(console.warn("Invalid response format from API"),c.value=[])}catch(e){console.error("Failed to fetch user online status:",e),c.value=[]}};function f(){r&&clearInterval(r),r=setInterval(async()=>{if(!v.value)try{await i.get("/user-online-status-update")}catch{}try{await p()}catch{}},1e4)}k(async()=>{console.log("=== Dashboard Component Mounted ==="),a.value=(l.channels||[]).map((e,n)=>({...e,active:n===0})),t.value=l.messages||[],s.value=a.value.find(e=>e.active),w(),console.log("Mounted channels:",a.value),console.log("Mounted messages:",t.value),console.log("Mounted active channel:",s.value),s.value?(console.log("Loading messages for channel:",s.value.id),h(s.value.id)):console.log("No active channel found");try{console.log("Updating own online status...");const e=document.head.querySelector('meta[name="csrf-token"]');e?console.log("CSRF token found:",e.content):console.warn("CSRF token not found"),await i.get("/user-online-status-update"),console.log("Own online status updated successfully")}catch(e){console.error("Failed to update own online status:",e),e.response&&e.response.status===419&&console.error("CSRF token error - page may need to be refreshed")}try{await p()}catch(e){console.error("Initial fetchOnlineStatus failed:",e),c.value=[]}f()}),D(()=>{r&&clearInterval(r)});const h=async e=>{a.value=a.value.map(n=>({...n,active:n.id===e})),s.value=a.value.find(n=>n.active);try{const n=await i.get(`/messages?channel_id=${e}`);t.value=n.data}catch(n){console.error("Failed to fetch messages:",n),t.value=[]}},A=async e=>{var n;console.log("New channel added:",e);try{const o=await i.get("/channels");console.log("Channels API response:",o.data);const u=o.data.channels||[];console.log("Updated channels:",u),a.value=u.map(d=>({...d,active:d.id===e.id})),console.log("Updated channels.value:",a.value),s.value=a.value.find(d=>d.active),console.log("Active channel:",s.value),s.value&&await h(s.value.id)}catch(o){console.error("Failed to refresh channels after creation:",o),console.error("Error response:",(n=o.response)==null?void 0:n.data),a.value=a.value.map(d=>({...d,active:!1}));const u={...e,active:!0};a.value.unshift(u),s.value=u,console.log("Fallback: Added channel directly:",u)}},I=e=>{t.value.unshift(e)},S=e=>{const n=t.value.findIndex(o=>o.id===e.id);n!==-1&&(t.value[n]=e)},_=e=>{const n=t.value.findIndex(o=>o.id===e);n!==-1&&t.value.splice(n,1)};return(e,n)=>(O(),b(F,{title:"Dashboard",channels:a.value,"direct-messages":c.value,messages:t.value,"active-channel":s.value,"manual-offline":v.value,onToggleManualOffline:C,onSelectChannel:h,onNewChannelAdded:A,onMessageSent:I,onMessageUpdated:S,onMessageDeleted:_},null,8,["channels","direct-messages","messages","active-channel","manual-offline"]))}};export{z as default};
